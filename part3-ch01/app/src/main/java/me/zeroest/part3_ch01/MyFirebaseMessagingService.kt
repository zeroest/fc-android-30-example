package me.zeroest.part3_ch01

import android.app.Notification
import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.app.PendingIntent.FLAG_UPDATE_CURRENT
import android.content.Context
import android.content.Intent
import android.media.RingtoneManager
import android.os.Build
import android.util.Log
import android.widget.RemoteViews
import android.widget.Toast
import androidx.core.app.NotificationCompat
import androidx.core.app.NotificationManagerCompat
import com.google.firebase.messaging.FirebaseMessagingService
import com.google.firebase.messaging.RemoteMessage

class MyFirebaseMessagingService: FirebaseMessagingService() {

    // Ïò§Î≤ÑÎùºÏù¥Îìú ÌïòÎùºÍ≥† Í≤ΩÍ≥†Î•º ÎùÑÏö¥Îã§.
    // ÌÜ†ÌÅ∞Ïù¥ Í∞±Ïã†Îê†Îïå Ìò∏Ï∂úÎêòÎäî Î©îÏÑúÎìú
    // Îî∞ÎùºÏÑú ÏÉàÎ°úÏö¥ ÌÜ†ÌÅ∞ÏùÑ ÏÑúÎ≤ÑÏóê Í∞±Ïã†ÌïòÎäî ÏΩîÎìúÎ•º Ïó¨Í∏∞Ïóê ÏûÖÎ†•ÌïòÎ©¥ ÎêúÎã§.
    override fun onNewToken(p0: String) {
        super.onNewToken(p0)

        Log.i("FirebaseMessagingService", "New Token : $p0")
    }

    // Ïã§Ï†ú Ìë∏ÏãúÍ∞Ä ÏôîÏùÑÎïå Ìò∏Ï∂úÎêòÎäî Î©îÏÑúÎìú
    override fun onMessageReceived(remoteMessage: RemoteMessage) {
        super.onMessageReceived(remoteMessage)

        Log.e("FirebaseMessageingService", "message : ${remoteMessage.data.toString()}")

        val type = remoteMessage.data["type"]
            ?.let { NotificationType.valueOf(it) }
        val title = remoteMessage.data["title"]
        val message = remoteMessage.data["message"]

        type ?: return

        createNotificationChannel()

        // ÎÖ∏Ìã∞Î•º ÏßÅÏ†ë ÎùÑÏö¥Îã§.
        NotificationManagerCompat.from(this)
            .notify(1, createNotification(type, title, message))
    }

    private fun createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channel = NotificationChannel(
                CHANNEL_ID,
                CHANNEL_NAME,
                NotificationManager.IMPORTANCE_DEFAULT
            )
            channel.description = CHANNEL_DESCRIPTION

            (getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager)
                .createNotificationChannel(channel)
        }
    }

    private fun createNotification(
        type: NotificationType,
        title: String?,
        message: String?
    ): Notification {
        val intent = Intent(this, MainActivity::class.java)
            .apply {
                putExtra("notificationType", "${type.title} ÌÉÄÏûÖ")
                // Í∏∞Ï°¥ activityÎ•º Í∞±Ïã†ÌïòÏó¨ ÏÇ¨Ïö©ÌïúÎã§ Ï¶â Ïä§ÌÉùÏóê ÎèôÏùºÌïú activityÍ∞Ä Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÎäîÎã§
                // onNewIntent Î©îÏÑúÎìúÍ∞Ä Ìò∏Ï∂úÎêúÎã§.
                addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)
            }
        val pendingIntent = PendingIntent.getActivity(this, type.id, intent, FLAG_UPDATE_CURRENT)

        val notificationBuilder = NotificationCompat.Builder(this, CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_baseline_waves_24)
            .setContentTitle(title)
            .setContentText(message)
            .setPriority(NotificationCompat.PRIORITY_DEFAULT)
            .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
            .setContentIntent(pendingIntent)
            .setAutoCancel(true)

        when (type) {
            NotificationType.NORMAL -> Unit
            NotificationType.EXPANDABLE -> {
                notificationBuilder.setStyle(
                    NotificationCompat.BigTextStyle()
                        .bigText("""
üòÄ üòÉ üòÑ üòÅ üòÜ üòÖ üòÇ ü§£ ü•≤ ‚ò∫Ô∏è üòä üòá üôÇ üôÉ üòâ üòå üòç ü•∞
üòò üòó üòô üòö üòã üòõ üòù üòú ü§™ ü§® üßê ü§ì üòé ü•∏ ü§© ü•≥ üòè üòí
üòû üòî üòü üòï üôÅ ‚òπÔ∏è üò£ üòñ üò´ üò© ü•∫ üò¢ üò≠ üò§ üò† üò° ü§¨ ü§Ø
üò≥ ü•µ ü•∂ üò± üò® üò∞ üò• üòì ü§ó ü§î ü§≠ ü§´ ü§• üò∂ üòê üòë üò¨ üôÑ
üòØ üò¶ üòß üòÆ üò≤ ü•± üò¥ ü§§ üò™ üòµ ü§ê ü•¥ ü§¢ ü§Æ ü§ß üò∑ ü§í ü§ï
ü§ë ü§† üòà üëø üëπ üë∫ ü§° üí© üëª üíÄ ‚ò†Ô∏è üëΩ üëæ ü§ñ üéÉ üò∫ üò∏ üòπ
üòª üòº üòΩ üôÄ üòø üòæ""")
                )
            }
            NotificationType.CUSTOM -> {
                notificationBuilder.setStyle(
                    NotificationCompat.DecoratedCustomViewStyle()
                )
                    .setCustomContentView(
                        RemoteViews(
                            packageName,
                            R.layout.view_custom_notification
                        )
                            .apply {
                                setTextViewText(R.id.title, title)
                                setTextViewText(R.id.message, message)
                            }
                    )
            }
        }

        return notificationBuilder.build()
    }

    companion object {
        private const val CHANNEL_NAME = "Emoji Party"
        private const val CHANNEL_DESCRIPTION = "Emoji PartyÎ•º ÏúÑÌïú Ï±ÑÎÑê"
        private const val CHANNEL_ID = "Channel Id"
    }

}